//
  $TOAST-GRID

  An insane grid.
  You'd be mad to use it.

  Usage
  =====

  Assuming default values:

  <div class="grid">
    <div class="grid-col_1_of_2">
      A half-width column.
    </div>
    <div class="grid-col_1_of_4.for-m_1_of_2">
      A quarter, but a half on medium width screen
    </div>
  </div>


  Customisation
  =============

  $toast-grid-namespace and $toast-grid-column-namespace
  adjusts the class names for the grid. With
  default values, grid wrappers have a class
  of '.grid' and columns '.grid__col'.

  $toast-col-groups(n) adjusts column divisions.
  For example, $toast-col-groups(12) will produce
  a 12-column grid. $col-groups(3,6,8)
  will produce a 3-, 6-, and 8-column grid.

  $toast-gutter-width is—you guessed it—the gutter
  width. Accepts any unit.

  That's it. Have fun.


// Namespaces
// This stops me from being overzealous with enforcing classes
$toast-grid-namespace: "grid" !default
$toast-grid-column-namespace: "grid-col" !default

// $col-groups are the column groups you want
// For example, $col-groups: (3, 4, 5) will output:
// .grid-col_n_of_3, .grid-col_n_of_4, [...]
$toast-col-groups: (2, 3, 4, 5, 6, 8, 12) !default

// Gutter width
$toast-gutter-width: 20px !default

// Breakpoints
$toast-breakpoint-medium: 768px !default
$toast-breakpoint-small: 480px !default

// Pushes and pulls
$toast-pushes: true !default
$toast-pulls: true !default

.#{$toast-grid-namespace}
  list-style: none

  // Removes gutters from the columns
  &.has-no_gutter
    margin-left: 0
    width: 100%

    .#{$toast-grid-column-namespace}
      padding-left: 0

      &.is-spanning_all
        margin-left: 0
        width: 100%

%span-all
  width: percentage(1/1)
%one-half
  width: percentage(1/2)
%one-third
  width: percentage(1/3)
%two-thirds
  width: percentage(2/3)
%one-quarter
  width: percentage(1/4)
%two-quarters
  width: percentage(2/4)
%three-quarters
  width: percentage(3/4)

%push-span-all
  margin-left: percentage(1/1)
%push-one-half
  margin-left: percentage(1/2)
%push-one-third
  margin-left: percentage(1/3)
%push-two-thirds
  margin-left: percentage(2/3)
%push-one-quarter
  margin-left: percentage(1/4)
%push-two-quarters
  margin-left: percentage(2/4)
%push-three-quarters
  margin-left: percentage(3/4)

%pull-span-all
  margin-left: -(percentage(1/1))
%pull-one-half
  margin-left: -(percentage(1/2))
%pull-one-third
  margin-left: -(percentage(1/3))
%pull-two-thirds
  margin-left: -(percentage(2/3))
%pull-one-quarter
  margin-left: -(percentage(1/4))
%pull-two-quarters
  margin-left: -(percentage(2/4))
%pull-three-quarters
  margin-left: -(percentage(3/4))

// All direct descendents of .grid get treated the same way.
// This might be overkill for some, but it's a time-saver for me.
%column
  box-sizing: border-box
  display: inline-block
  margin-right: -.25em
  min-height: 1px
  padding-left: $toast-gutter-width
  vertical-align: top

  @media (max-width: $toast-breakpoint-medium)
    display: block
    margin-left: 0
    margin-right: 0
    width: auto

  @media (max-width: $toast-breakpoint-medium) and (min-width: $toast-breakpoint-small)
    &[class*="for-m_"]
      display: inline-block
      margin-right: -.24em

    &.for-m_1_of_2
      width: percentage(1/2)

    &.for-m_1_of_3
      width: percentage(1/3)

    &.for-m_2_of_3
      width: percentage(2/3)

    &.for-m_1_of_4
      width: percentage(1/4)

    &.for-m_2_of_4
      @extend .for-m_1_of_2

    &.for-m_3_of_4
      width: percentage(3/4)

  @media (max-width: $toast-breakpoint-small)
    &[class*="for-s_"]
      display: inline-block
      margin-right: -.24em

    &.for-s_1_of_2
      width: percentage(1/2)

    &.for-s_1_of_3
      width: percentage(1/3)

    &.for-s_2_of_3
      width: percentage(2/3)

    &.for-s_1_of_4
      width: percentage(1/4)

    &.for-s_2_of_4
      @extend .for-s_1_of_2

    &.for-s_3_of_4
      width: percentage(3/4)

  // Centers the column in the grid and clears the row of all other columns
  &.is-centered
    display: block
    margin-left: auto
    margin-right: auto


  // Displays the column as the first in its row
  &.is-d-first
    float: left

  // Displays the column as the last in its row
  &.is-d-last
    float: right

// For each of our column groups...
@each $group in $toast-col-groups

  // For each column width from 1 to the column group...
  @for $i from 1 through $group
    .#{$toast-grid-column-namespace}_#{$i}_of_#{$group}
      @extend %column

      @if percentage($i/$group) == percentage(1/1)
        @extend %span-all
      @else if percentage($i/$group) == percentage(1/2)
        @extend %one-half
      @else if percentage($i/$group) == percentage(1/3)
        @extend %one-third
      @else if percentage($i/$group) == percentage(2/3)
        @extend %two-thirds
      @else if percentage($i/$group) == percentage(1/4)
        @extend %one-quarter
      @else if percentage($i/$group) == percentage(2/4)
        @extend %two-quarters
      @else if percentage($i/$group) == percentage(3/4)
        @extend %three-quarters
      @else
        width: percentage($i/$group)



    // TODO: Find a good name for column pushing
    //@if ($toast-pushes)
    //  .#{$toast-grid-column-namespace}--push-#{$i}-of-#{$group}
    //    @if percentage($i/$group) == percentage(1/1)
    //      @extend %push-span-all
    //    @else if percentage($i/$group) == percentage(1/2)
    //      @extend %push-one-half
    //    @else if percentage($i/$group) == percentage(1/3)
    //      @extend %push-one-third
    //    @else if percentage($i/$group) == percentage(2/3)
    //      @extend %push-two-thirds
    //    @else if percentage($i/$group) == percentage(1/4)
    //      @extend %push-one-quarter
    //    @else if percentage($i/$group) == percentage(2/4)
    //      @extend %push-two-quarters
    //    @else if percentage($i/$group) == percentage(3/4)
    //      @extend %push-three-quarters
    //    @else
    //      margin-left: percentage($i/$group)

    // TODO: Find a good name for column pulling
    //@if ($toast-pulls)
    //  .#{$toast-grid-column-namespace}--pull-#{$i}-of-#{$group}
    //    @if percentage($i/$group) == percentage(1/1)
    //      @extend %pull-span-all
    //    @else if percentage($i/$group) == percentage(1/2)
    //      @extend %pull-one-half
    //    @else if percentage($i/$group) == percentage(1/3)
    //      @extend %pull-one-third
    //    @else if percentage($i/$group) == percentage(2/3)
    //      @extend %pull-two-thirds
    //    @else if percentage($i/$group) == percentage(1/4)
    //      @extend %pull-one-quarter
    //    @else if percentage($i/$group) == percentage(2/4)
    //      @extend %pull-two-quarters
    //    @else if percentage($i/$group) == percentage(3/4)
    //      @extend %pull-three-quarters
    //    @else
    //      margin-left: -(percentage($i/$group))
